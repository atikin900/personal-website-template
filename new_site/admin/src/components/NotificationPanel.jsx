import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'

const NotificationPanel = () => {
  const [notifications] = useState([
    {
      id: 1,
      title: '–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –≤ –±–ª–æ–≥–µ',
      message: '–ó–∞–ø–∏—Å—å "–ú–æ–π –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç" –±—ã–ª–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞',
      time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
      type: 'success',
      icon: 'üìù'
    },
    {
      id: 2,
      title: '–¶–µ–ª—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞',
      message: '–¶–µ–ª—å "–ò–∑—É—á–∏—Ç—å React" –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è',
      time: '5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥',
      type: 'info',
      icon: 'üéØ'
    },
    {
      id: 3,
      title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã',
      message: '–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏',
      time: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥',
      type: 'warning',
      icon: '‚öôÔ∏è'
    }
  ])

  const unreadCount = notifications.length

  return (
    <Popover>
      <PopoverTrigger asChild>
        <Button variant="outline" size="sm" className="relative gap-2">
          <span className="text-lg">üîî</span>
          <span className="hidden sm:inline">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
          {unreadCount > 0 && (
            <span className="absolute -top-1 -right-1 notification-badge text-xs">
              {unreadCount}
            </span>
          )}
        </Button>
      </PopoverTrigger>
      <PopoverContent className="w-80" align="end">
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h4 className="font-medium leading-none">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h4>
            <Button 
              variant="ghost" 
              size="sm" 
              className="text-xs"
              onClick={() => alert('–í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–º–µ—á–µ–Ω—ã –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ')}
            >
              –û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ
            </Button>
          </div>
          
          <div className="space-y-3 max-h-80 overflow-y-auto">
            {notifications.map((notification) => (
              <div
                key={notification.id}
                className="flex items-start space-x-3 p-3 rounded-lg bg-muted/20 hover:bg-muted/40 transition-colors cursor-pointer"
              >
                <div className="flex-shrink-0 w-8 h-8 rounded-full bg-primary/10 flex items-center justify-center">
                  <span className="text-sm">{notification.icon}</span>
                </div>
                <div className="flex-1 min-w-0">
                  <p className="text-sm font-medium text-foreground">
                    {notification.title}
                  </p>
                  <p className="text-xs text-muted-foreground mt-1">
                    {notification.message}
                  </p>
                  <p className="text-xs text-muted-foreground mt-2">
                    {notification.time}
                  </p>
                </div>
              </div>
            ))}
          </div>
          
          <div className="pt-2 border-t">
            <Button 
              variant="ghost" 
              className="w-full text-sm"
              onClick={() => alert('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–ª–Ω–æ–º—É —Å–ø–∏—Å–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')}
            >
              –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            </Button>
          </div>
        </div>
      </PopoverContent>
    </Popover>
  )
}

export default NotificationPanel