import { useState, useEffect } from 'react'
import { Link } from 'react-router-dom'
import axios from 'axios'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'

const Dashboard = () => {
  const [stats, setStats] = useState({
    posts: 0,
    goals: 0,
    completedGoals: 0,
    totalViews: 1247,
    monthlyGrowth: 12.5
  })
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    const fetchStats = async () => {
      try {
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ API
        const [postsRes, goalsRes] = await Promise.all([
          axios.get('http://localhost:8000/api/posts'),
          axios.get('http://localhost:8000/api/goals')
        ])

        const totalGoals = goalsRes.data.reduce((acc, category) => acc + category.goals.length, 0)
        const completedGoals = goalsRes.data.reduce((acc, category) => 
          acc + category.goals.filter(goal => goal.is_completed).length, 0
        )

        setStats(prev => ({
          ...prev,
          posts: postsRes.data.length,
          goals: totalGoals,
          completedGoals
        }))
      } catch (error) {
        console.error('Error fetching stats:', error)
      } finally {
        setLoading(false)
      }
    }

    fetchStats()
  }, [])

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-muted-foreground">–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</div>
      </div>
    )
  }

  const completionRate = stats.goals > 0 ? Math.round((stats.completedGoals / stats.goals) * 100) : 0

  return (
    <div className="space-y-8">
      {/* Welcome Section */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-foreground">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã</h1>
          <p className="text-muted-foreground mt-2">
            –í–æ—Ç –æ–±–∑–æ—Ä –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
          </p>
        </div>
        <Button 
          className="gradient-bg hover:opacity-90"
          onClick={() => {
            // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            alert('–§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö')
          }}
        >
          <span className="mr-2">üìä</span>
          –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
        </Button>
      </div>

      {/* Metrics Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {/* Site Status */}
        <div className="metric-card">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-success/10 rounded-xl flex items-center justify-center">
              <span className="text-2xl">üü¢</span>
            </div>
            <div className="text-right">
              <div className="metric-change positive">99.9%</div>
            </div>
          </div>
          <div className="metric-value">–û–Ω–ª–∞–π–Ω</div>
          <div className="metric-label">–°—Ç–∞—Ç—É—Å —Å–∞–π—Ç–∞</div>
        </div>

        {/* Blog Posts */}
        <div className="metric-card">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-info/10 rounded-xl flex items-center justify-center">
              <span className="text-2xl">üìù</span>
            </div>
            <div className="text-right">
              <div className="metric-change positive">+{stats.posts > 5 ? '8' : '2'}</div>
            </div>
          </div>
          <div className="metric-value">{stats.posts}</div>
          <div className="metric-label">–ó–∞–ø–∏—Å–µ–π –≤ –±–ª–æ–≥–µ</div>
        </div>

        {/* Goals Completion */}
        <div className="metric-card">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-warning/10 rounded-xl flex items-center justify-center">
              <span className="text-2xl">üéØ</span>
            </div>
            <div className="text-right">
              <div className="metric-change positive">{completionRate}%</div>
            </div>
          </div>
          <div className="metric-value">{stats.completedGoals}/{stats.goals}</div>
          <div className="metric-label">–í—ã–ø–æ–ª–Ω–µ–Ω–æ —Ü–µ–ª–µ–π</div>
        </div>

        {/* Last Update */}
        <div className="metric-card">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-chart-4/10 rounded-xl flex items-center justify-center">
              <span className="text-2xl">üîÑ</span>
            </div>
            <div className="text-right">
              <div className="metric-change positive">–°–µ–≥–æ–¥–Ω—è</div>
            </div>
          </div>
          <div className="metric-value">2 –¥–Ω—è</div>
          <div className="metric-label">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</div>
        </div>
      </div>

      {/* Charts and Activity */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* Performance Overview */}
        <div className="lg:col-span-2">
          <div className="chart-container">
            <div className="flex items-center justify-between mb-6">
              <h3 className="text-lg font-semibold text-foreground">–û–±–∑–æ—Ä –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</h3>
              <div className="flex space-x-2">
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={() => alert('–ü–æ–∫–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è')}
                >
                  –°–µ–≥–æ–¥–Ω—è
                </Button>
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={() => alert('–ü–æ–∫–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é')}
                >
                  –ù–µ–¥–µ–ª—è
                </Button>
                <Button 
                  variant="outline" 
                  size="sm" 
                  className="bg-primary text-primary-foreground"
                  onClick={() => alert('–ü–æ–∫–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∑–∞ –º–µ—Å—è—Ü (–∞–∫—Ç–∏–≤–Ω–æ)')}
                >
                  –ú–µ—Å—è—Ü
                </Button>
              </div>
            </div>
            
            {/* Simple Chart Placeholder */}
            <div className="h-64 bg-muted/20 rounded-lg flex items-center justify-center relative overflow-hidden">
              <div className="absolute inset-0 bg-gradient-to-r from-success/20 via-info/20 to-warning/20"></div>
              <div className="relative z-10 text-center">
                <div className="text-4xl font-bold text-foreground mb-2">
                  {stats.posts + stats.goals + stats.completedGoals}
                </div>
                <div className="text-muted-foreground">–û–±—â–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</div>
              </div>
              
              {/* Chart visualization */}
              <div className="absolute bottom-0 left-0 right-0 h-32 flex items-end justify-around px-4">
                {[40, 65, 45, 80, 55, 90, 70].map((height, index) => (
                  <div
                    key={index}
                    className="bg-success/60 rounded-t-sm transition-all duration-500 hover:bg-success"
                    style={{ height: `${height}%`, width: '12%' }}
                  ></div>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* Recent Activity */}
        <div className="chart-container">
          <h3 className="text-lg font-semibold text-foreground mb-6">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
          <div className="space-y-4">
            <div className="activity-item">
              <div className="activity-avatar">üìù</div>
              <div className="flex-1">
                <p className="text-sm font-medium text-foreground">–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –≤ –±–ª–æ–≥–µ</p>
                <p className="text-xs text-muted-foreground">2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</p>
              </div>
            </div>
            
            <div className="activity-item">
              <div className="activity-avatar">üéØ</div>
              <div className="flex-1">
                <p className="text-sm font-medium text-foreground">–¶–µ–ª—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞</p>
                <p className="text-xs text-muted-foreground">5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥</p>
              </div>
            </div>
            
            <div className="activity-item">
              <div className="activity-avatar">‚öôÔ∏è</div>
              <div className="flex-1">
                <p className="text-sm font-medium text-foreground">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã</p>
                <p className="text-xs text-muted-foreground">1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥</p>
              </div>
            </div>
            
            <div className="activity-item">
              <div className="activity-avatar">üë§</div>
              <div className="flex-1">
                <p className="text-sm font-medium text-foreground">–ü—Ä–æ—Ñ–∏–ª—å –∏–∑–º–µ–Ω–µ–Ω</p>
                <p className="text-xs text-muted-foreground">2 –¥–Ω—è –Ω–∞–∑–∞–¥</p>
              </div>
            </div>
          </div>
          
          <Button 
            variant="outline" 
            className="w-full mt-4"
            onClick={() => alert('–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö')}
          >
            –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
          </Button>
        </div>
      </div>

      {/* Quick Actions */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <Card className="glass-effect hover:shadow-lg transition-all duration-200">
          <CardHeader className="pb-3">
            <CardTitle className="text-lg flex items-center">
              <span className="mr-3 text-2xl">üìù</span>
              –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            <Button asChild className="w-full justify-start">
              <Link to="/posts">
                <span className="mr-2">‚ûï</span>
                –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å
              </Link>
            </Button>
            <Button asChild variant="outline" className="w-full justify-start">
              <Link to="/goals">
                <span className="mr-2">üéØ</span>
                –î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å
              </Link>
            </Button>
          </CardContent>
        </Card>

        <Card className="glass-effect hover:shadow-lg transition-all duration-200">
          <CardHeader className="pb-3">
            <CardTitle className="text-lg flex items-center">
              <span className="mr-3 text-2xl">üîó</span>
              –ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            <Button asChild variant="outline" className="w-full justify-start">
              <a href="http://localhost:5173" target="_blank" rel="noopener noreferrer">
                <span className="mr-2">üè†</span>
                –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
              </a>
            </Button>
            <Button asChild variant="outline" className="w-full justify-start">
              <a href="http://localhost:5173/blog" target="_blank" rel="noopener noreferrer">
                <span className="mr-2">üìñ</span>
                –ë–ª–æ–≥
              </a>
            </Button>
          </CardContent>
        </Card>

        <Card className="glass-effect hover:shadow-lg transition-all duration-200">
          <CardHeader className="pb-3">
            <CardTitle className="text-lg flex items-center">
              <span className="mr-3 text-2xl">‚öôÔ∏è</span>
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            <Button asChild variant="outline" className="w-full justify-start">
              <Link to="/settings">
                <span className="mr-2">üåê</span>
                –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
              </Link>
            </Button>
            <Button asChild variant="outline" className="w-full justify-start">
              <Link to="/user-settings">
                <span className="mr-2">üë§</span>
                –ü—Ä–æ—Ñ–∏–ª—å
              </Link>
            </Button>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}

export default Dashboard