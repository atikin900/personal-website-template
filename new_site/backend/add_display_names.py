#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π display_name –∏ short_name –≤ —Ç–∞–±–ª–∏—Ü—É site_settings
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, ".")

def add_display_name_fields():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è display_name –∏ short_name –≤ —Ç–∞–±–ª–∏—Ü—É site_settings"""
    
    try:
        from app.database import engine
        from sqlalchemy import text
        
        with engine.connect() as connection:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ –ø–æ–ª—è
            result = connection.execute(text("PRAGMA table_info(site_settings)"))
            columns = [row[1] for row in result.fetchall()]
            
            if 'display_name' not in columns:
                connection.execute(text("ALTER TABLE site_settings ADD COLUMN display_name VARCHAR DEFAULT '–í–∞—à–µ –ò–º—è'"))
                print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ display_name")
            else:
                print("‚ÑπÔ∏è –ü–æ–ª–µ display_name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
            if 'short_name' not in columns:
                connection.execute(text("ALTER TABLE site_settings ADD COLUMN short_name VARCHAR DEFAULT '–ò–º—è'"))
                print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ short_name")
            else:
                print("‚ÑπÔ∏è –ü–æ–ª–µ short_name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            connection.commit()
            
        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    print("üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö –∏–º–µ–Ω...")
    
    if add_display_name_fields():
        print("\n‚ú® –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –∏–º–µ–Ω–∞ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏.")
        print("üìç –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞ ‚Üí –ü–æ–ª–Ω–æ–µ –∏–º—è / –ö–æ—Ä–æ—Ç–∫–æ–µ –∏–º—è")
    else:
        print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")